#!/bin/sh
#
### BEGIN INIT INFO
# Provides: cuttlefish-common
# Required-Start: $remote_fs libvirtd
# Required-Stop: $remote_fs libvirtd
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Set up initial cuttlefish environment
# Description: This script sets up the initial cuttlefist environment,
#              optionally booting a default cuttlefish release.
### END INIT INFO
#
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Make sure calls to this script get redirected to systemctl when
# using systemd

. /lib/lsb/init-functions

num_cvd_accounts=8

create_interface() {
  printf '<network>\n'
  printf '  <name>cvd-%s-%02d</name>\n' "$2" $1
  printf "  <forward mode='nat'>\n"
  printf "    <nat>\n"
  printf "      <port start='1024' end='65535'/>\n"
  printf "    </nat>\n"
  printf "  </forward>\n"
  printf "  <bridge name='cvd-%s-%02d' stp='on' delay='0'/>\n" "$2" $1
  printf "  <ip address='%s.%d' netmask='255.255.255.252'>\n" \
    "$3" $(($1 * 4 - 3))
  printf "    <dhcp>\n"
  printf "      <range start='%s.%d' end='%s.%d'/>\n" \
    "$3" $(($1 * 4 - 2)) "$3" $(($1 * 4 - 2))
  printf "    </dhcp>\n"
  printf "  </ip>\n"
  printf "</network>\n"
}

create_mobile_interface() {
  create_interface "$1" mobile 192.168.99
}

create_wifi_interface() {
  create_interface "$1" wifi 192.168.98
}

start() {
    /sbin/modprobe vhci-hcd
    /sbin/modprobe mac80211_hwsim
    # This has to be expressed in very basic shell syntax, so we can't
    # use the typical array idiom.
    for i in /sys/devices/platform/vhci_hcd/attach \
      /sys/devices/platform/vhci_hcd/detach; do
      if [ -f $i ]; then
        USB_FILES="${USB_FILES} ${i}"
      fi
    done
    if [ -n "${USB_FILES}" ]; then
      chgrp libvirt ${USB_FILES}
      chmod g+w ${USB_FILES}
    else
      log_warning_msg "USB controller not found. adb may not be available"
    fi
    for i in $(seq ${num_cvd_accounts}); do
      create_mobile_interface $i | /usr/bin/virsh net-create /dev/fd/0
      create_wifi_interface $i | /usr/bin/virsh net-create /dev/fd/0
    done
    /usr/sbin/hostapd -B /etc/cf-hostapd.conf
}

stop() {
    killall hostapd
    for i in $(seq ${num_cvd_accounts}); do
      /usr/bin/virsh net-destroy "$(printf cvd-mobile-%02d $i)"
      /usr/bin/virsh net-destroy "$(printf cvd-wifi-%02d $i)"
    done
    /sbin/rmmod mac80211_hwsim
}

usage() {
  echo $0: start\|stop
}

if test $# != 1; then
    usage
fi
case "$1" in
    --help)
        usage 0
        ;;
    start|stop)
        "$1"
        ;;
    restart)
        stop && start
        ;;
    condrestart|try-restart)
        stop && start
        ;;
    reload|force-reload)
        # Nothing to do; we reread configuration on each invocation
        ;;
    status)
        rh_status
        ;;
    shutdown)
        stop
        ;;
    *)
        usage
        ;;
esac
exit $RETVAL
